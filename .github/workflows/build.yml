name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: macos-latest-xlarge
    steps:
    - uses: actions/checkout@v4
    - name: Clone Ghidra    
      uses: actions/checkout@v4
      with:
        repository: NationalSecurityAgency/ghidra
        ref: Ghidra_11.0_build
        path: ghidra
    - name: Deps
      run: brew install imagemagick
    - name: Build (fetchDependencies)
      run: |
        cd ghidra
        gradle -I gradle/support/fetchDependencies.gradle init
    - name: Build (buildNatives)
      run: |
        cd ghidra
        gradle buildNatives
    # - name: Build (assembleAll)
    #   run: |
    #     cd ghidra
    #     gradle assembleAll
    - name: Build (buildGhidra)
      run: |
        cd ghidra
        gradle buildGhidra
    - name: CreateGhidraApp
      run: |
        ls -lah ghidra/build/dist/
        unzip ghidra/build/dist/ghidra_11.0_*.zip -d ghidra/build/dist/
        ./CreateGhidraApp.sh ghidra/build/dist/ghidra_11.0_DEV
        zip Ghidra_11.0.zip -r Ghidra.app/
        shasum -a 256 Ghidra_11.0.zip > Ghidra_11.0.zip.sha256
    - name: Release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: "11.0"
        tag_name: ${{ github.ref }}
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Darwin Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: Ghidra_11.0.zip
        asset_name: Ghidra_11.0.zip
        asset_content_type: application/zip
    - name: Upload Darwin Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: Ghidra_11.0.zip.sha256
        asset_name: Ghidra_11.0.zip.sha256
        asset_content_type: text/plain